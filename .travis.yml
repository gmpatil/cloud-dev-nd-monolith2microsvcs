language: minimal
# dist: xenial
# os:linux

services: docker

env:
  - DOCKER_COMPOSE_VERSION=1.23.2

before_install:
  - docker -v && docker-compose -v
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
  - chmod +x ./kubectl
  - sudo mv ./kubectl /usr/local/bin/kubectl
  - docker -v && docker-compose -v  

install:
  - docker-compose -f  deployment/docker/docker-compose-build.yaml build --parallel 

after_success:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push gmpatil/udgm-reverseproxy
  - docker push gmpatil/udgm-api-user
  - docker push gmpatil/udgm-api-feed
  - docker push gmpatil/udgm-frontend
  - docker logout
# Get AWS-CLI client
  - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
  - unzip awscliv2.zip
  - sudo ./aws/install
  - mkdir ~/.aws
  - echo "[default]" >> ~/.aws/credentials
  - echo "aws_access_key_id = ${AWS_ACCESS_KEY_ID}" >> ~/.aws/credentials
  - echo "aws_secret_access_key = ${AWS_SECRET_ACCESS_KEY}" >> ~/.aws/credentials
  - echo "[default]" >> ~/.aws/config
  - echo "region = ${aws_region}" >> ~/.aws/config
  - aws eks --region ${aws_region2} update-kubeconfig --name gmp_eks_cluster
  - kubectl get svc
# Deploy to AWS/EKS Kubernetes cluster.  
  - kubectl apply -f ./deployment/k8s/backend-user-deployment.yaml
  - kubectl apply -f ./deployment/k8s/backend-feed-deployment.yaml
  - kubectl apply -f ./deployment/k8s/frontend-deployment.yaml
  - sudo rm -rf ~/.aws
